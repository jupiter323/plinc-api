AWSTemplateFormatVersion: 2010-09-09

Transform: 'AWS::Serverless-2016-10-31'

Description: |
  Plinc API

Parameters:
  Project:
    Type: String
    MinLength: 3
    AllowedPattern: '[a-zA-Z]+'
    ConstraintDescription: |
      Only alphanumerical characters are allowed.
    Description: |
      The name of the project being deployed.

  KeyAccessPolicy:
    Type: AWS::SSM::Parameter::Value<String>
    Description: |
      The managed IAM access policy providing encryption and decryption
      access to the KMS key.

  UserPoolId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /plinc/Foundations/Cognito/UserPoolId
    Description: |
      Arn of the Plinc User Pool in Cognito

  ListsTableName:
    Type: String
    MinLength: 3
    Description: |
      The name of the lists table in DynamoDB

  DefinitionKey:
    Type: String
    MinLength: 3
    Description: |
      The S3 location of the OpenApi spec

Globals:
  Api:
    Cors: "'*'"

Resources:
  PlincApiRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Policies:
        - PolicyName: InvokeLambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource: '*'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'apigateway.amazonaws.com'
          Action: 'sts:AssumeRole'

  PlincApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: !Ref DefinitionKey
      Cors:
        AllowHeaders: "'content-type,authorization,x-amz-date,x-amz-security-token,x-requested-with'"
        AllowOrigin: "'*'"
        AllowCredentials: false
        MaxAge: "'3600'"

  Lists:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref ListsTableName
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      SSESpecification:
        SSEEnabled: true
      AttributeDefinitions:
        - AttributeName: ListId
          AttributeType: S
        - AttributeName: User
          AttributeType: S
      KeySchema:
        - AttributeName: User
          KeyType: HASH
        - AttributeName: ListId
          KeyType: RANGE

  CreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      Handler: src/index.create
      CodeUri: ../dist/package
      Policies:
        - !Ref KeyAccessPolicy
        - AWSLambdaBasicExecutionRole
        - Statement:
            Action:
              - dynamodb:PutItem
            Effect: Allow
            Resource: !GetAtt Lists.Arn
      Environment:
        Variables:
          LISTS_TABLE_NAME: !Ref ListsTableName
      Events:
        PlincApiCreate:
          Type: Api
          Properties:
            Path: /lists
            Method: POST
            RestApiId: !Ref PlincApi

  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      Handler: src/index.get
      CodeUri: ../dist/package
      Policies:
      - !Ref KeyAccessPolicy
      - AWSLambdaBasicExecutionRole
      - Statement:
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
          Effect: Allow
          Resource: !GetAtt Lists.Arn
      Environment:
        Variables:
          LISTS_TABLE_NAME: !Ref ListsTableName
      Events:
        PlincApiGet:
          Type: Api
          Properties:
            Path: /lists
            Method: GET
            RestApiId: !Ref PlincApi

  GetAllFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      Handler: src/index.getAll
      CodeUri: ../dist/package
      Policies:
      - !Ref KeyAccessPolicy
      - AWSLambdaBasicExecutionRole
      - Statement:
          Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
          Effect: Allow
          Resource: !GetAtt Lists.Arn
      Environment:
        Variables:
          LISTS_TABLE_NAME: !Ref ListsTableName
      Events:
        PlincApiGetAll:
          Type: Api
          Properties:
            Path: /lists
            Method: GET
            RestApiId: !Ref PlincApi

  CreateLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${CreateFunction}'
      RetentionInDays: 1

  GetLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${GetFunction}'
      RetentionInDays: 1

  GetAllLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${GetAllFunction}'
      RetentionInDays: 1

  ApiUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name:
        Fn::Transform:
          Name: ParameterPrefix
          Parameters:
            Project: !Ref Project
            Key: ApiUrl
      Value: !Sub 'https://${PlincApi}.execute-api.${AWS::Region}.amazonaws.com/prod'

Outputs:
  ApiUrl:
    Description: 'Plinc API URL'
    Value: !Sub 'https://${PlincApi}.execute-api.${AWS::Region}.amazonaws.com/prod'
