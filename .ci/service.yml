AWSTemplateFormatVersion: 2010-09-09

Transform: 'AWS::Serverless-2016-10-31'

Description: |
  Plinc API

Parameters:
  Project:
    Type: String
    MinLength: 3
    AllowedPattern: '[a-zA-Z]+'
    ConstraintDescription: |
      Only alphanumerical characters are allowed.
    Description: |
      The name of the project being deployed.

  KeyAccessPolicy:
    Type: AWS::SSM::Parameter::Value<String>
    Description: |
      The managed IAM access policy providing encryption and decryption
      access to the KMS key.

  UserPoolArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /plinc/Foundations/Cognito/UserPoolArn
    Description: |
      Arn of the Plinc User Pool in Cognito

Globals:
  Api:
    Cors: "'*'"

Resources:
  PlincApiRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Policies:
        - PolicyName: InvokeLambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource: '*'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'apigateway.amazonaws.com'
          Action: 'sts:AssumeRole'

  PlincApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Ref UserPoolArn
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./spec.yml

  HelloFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      Handler: index.handler
      CodeUri: ../src
      Policies:
        - !Ref KeyAccessPolicy
        - AWSLambdaBasicExecutionRole
      Events:
        PlincApiHello:
          Type: Api
          Properties:
            Path: /hello
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
            RestApiId: !Ref PlincApi

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${HelloFunction}'
      RetentionInDays: 1

  ApiUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name:
        Fn::Transform:
          Name: ParameterPrefix
          Parameters:
            Project: !Ref Project
            Key: ApiUrl
      Value: !Sub 'https://${PlincApi}.execute-api.${AWS::Region}.amazonaws.com/prod'

Outputs:
  ApiUrl:
    Description: 'Plinc API URL'
    Value: !Sub 'https://${PlincApi}.execute-api.${AWS::Region}.amazonaws.com/prod'
