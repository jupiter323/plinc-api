AWSTemplateFormatVersion: 2010-09-09

Description: |
  A CodePipeline and CodeBuild process for build, testing and deploying plinc.app

Parameters:
  Project:
    Type: String
    MinLength: 3
    AllowedPattern: '[a-zA-Z]+'
    ConstraintDescription: |
      Only alphanumerical characters are allowed.
    Description: |
      The name of the project being deployed.

  Repository:
    Type: String
    AllowedPattern: '^[-_a-zA-Z0-9]+/[-_a-zA-Z0-9]+$'
    ConstraintDescription: |
      Ensure you have defined a full path, including the username or
      organisation name.
    Description: |
      The full name of the repository, such as "<username>/<name>".

  Branch:
    Type: String
    Description: Branch to use from the repository.
    Default: master

  ArtifactStore:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /plinc/Foundations/CI/ArtifactBucketName

  PipelineExecutionRole:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /plinc/Foundations/CI/PipelineExecutionRole

  EncryptionKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /plinc/Foundations/Key

  SwaggerUIBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /plinc/Foundations/SwaggerBucketName

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${Project}-pipeline'
      RestartExecutionOnUpdate: true
      RoleArn: !Ref PipelineExecutionRole
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStore
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: GitHubOutput
              Configuration:
                Owner: !Select [0, !Split ['/', !Ref Repository]]
                Repo: !Select [1, !Split ['/', !Ref Repository]]
                Branch: !Ref Branch
                OAuthToken: '{{resolve:secretsmanager:PlincGitHubPersonalAccessToken}}'
                PollForSourceChanges: false
        - Name: Pipeline
          Actions:
            - Name: Update
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: GitHubOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !Ref PipelineExecutionRole
                StackName: !Ref AWS::StackName
                TemplatePath: GitHubOutput::.ci/pipeline.yml
                ParameterOverrides: !Sub |
                  {
                    "Branch": "${Branch}",
                    "Project": "${Project}",
                    "Repository": "${Repository}"
                  }
        - Name: Build
          Actions:
            - Name: APIBuild
              RunOrder: 1
              InputArtifacts:
                - Name: GitHubOutput
              OutputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref Build
                PrimarySource: GitHubOutput
            - Name: SwaggerBuild
              RunOrder: 1
              InputArtifacts:
              - Name: GitHubOutput
              OutputArtifacts:
              - Name: SwaggerBuildOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref SwaggerBuild
                PrimarySource: GitHubOutput
#        - Name: Integration
#          Actions:
#            - Name: Deploy
#              RunOrder: 1
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Provider: CloudFormation
#                Version: 1
#              RoleArn: !Ref PipelineExecutionRole
#              InputArtifacts:
#                - Name: GitHubOutput
#                - Name: BuildOutput
#              OutputArtifacts:
#                - Name: IntegrationTestDeployOutput
#              Configuration:
#                ActionMode: CREATE_UPDATE
#                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
#                RoleArn: !Ref PipelineExecutionRole
#                TemplatePath: BuildOutput::packaged.yml
#                TemplateConfiguration: GitHubOutput::.ci/config/service/dev.json
#                StackName: !Sub 'plinc-${Project}-integration-test'
#                OutputFileName: Outputs.json
#                ParameterOverrides: !Sub |
#                  {
#                    "Project": "ApiIntegrationTest",
#                    "ListsTableName": "Plinc.${Project}.IntegrationTest.Lists"
#                  }
#            - Name: Test
#              RunOrder: 2
#              InputArtifacts:
#                - Name: GitHubOutput
#                - Name: IntegrationTestDeployOutput
#              ActionTypeId:
#                Category: Test
#                Owner: AWS
#                Version: 1
#                Provider: CodeBuild
#              Configuration:
#                ProjectName: !Ref Test
#                PrimarySource: GitHubOutput
#            - Name: Teardown
#              RunOrder: 3
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Provider: CloudFormation
#                Version: 1
#              Configuration:
#                ActionMode: DELETE_ONLY
#                RoleArn: !Ref PipelineExecutionRole
#                StackName: !Sub 'plinc-${Project}-integration-test'
        - Name: Development
          Actions:
            - Name: Service
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              RoleArn: !Ref PipelineExecutionRole
              InputArtifacts:
              - Name: GitHubOutput
              - Name: BuildOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !Ref PipelineExecutionRole
                TemplatePath: BuildOutput::packaged.yml
                TemplateConfiguration: GitHubOutput::.ci/config/service/dev.json
                StackName: !Sub 'plinc-${Project}'
                ParameterOverrides: !Sub |
                  {
                    "Project": "${Project}",
                    "ListsTableName": "Plinc.${Project}.Lists"
                  }
            - Name: Deploy
              RunOrder: 1
              InputArtifacts:
              - Name: SwaggerBuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref SwaggerUIBucket
                Extract: true
  PipelineTrigger:
    Type: AWS::CodePipeline::Webhook
    Properties:
      AuthenticationConfiguration:
        SecretToken: !Ref AWS::StackName
      Filters:
        - JsonPath: '$.ref'
          MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetPipelineVersion: !GetAtt Pipeline.Version
      TargetAction: GitHub
      RegisterWithThirdParty: true

  Build:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 'plinc-${Project}-build'
      Description: Build for Plinc API
      ServiceRole: !Ref PipelineExecutionRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: .ci/buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.14.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ARTIFACT_BUCKET
            Value: !Ref ArtifactStore
          - Name: ENCRYPTION_KEY
            Value: !Ref EncryptionKey
      Artifacts:
        Type: CODEPIPELINE

  SwaggerBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 'plinc-${Project}-swagger-build'
      Description: Build for Plinc API Swagger UI
      ServiceRole: !Ref PipelineExecutionRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: .ci/swagger-buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.14.1
        Type: LINUX_CONTAINER
      Artifacts:
        Type: CODEPIPELINE

  Test:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 'plinc-${Project}-test'
      Description: Integration tests for Plinc API
      EncryptionKey: !Ref EncryptionKey
      ServiceRole: !Ref PipelineExecutionRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: .ci/testspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.14.1
        Type: LINUX_CONTAINER
      Artifacts:
        Type: CODEPIPELINE
