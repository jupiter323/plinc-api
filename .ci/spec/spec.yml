swagger: '2.0'

info:
  title: Plinc API
  description: Use this API to retrieve wish lists and items for Plinc.app
  version: 0.0.1

host: 1q5r7zk3ye.execute-api.us-east-1.amazonaws.com
basePath: /prod
schemes:
  - https

securityDefinitions:
  $ref: ./security.yml

x-amazon-apigateway-gateway-responses:
  $ref: ./gateway/responses.yml

x-amazon-apigateway-request-validators:
  $ref: ./gateway/validators.yml

x-amazon-apigateway-request-validator: all

paths:
  /lists:
    post:
      summary: Create a list
      tags:
        - Lists
      description: Create a list for the current logged in user.
      parameters:
        - in: body
          name: list
          description: list to be created
          schema:
            $ref: '#/definitions/List'
      responses:
        201:
          description: Created
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
        403:
          description: Access Denied
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${CreateFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

    get:
      summary: Get lists
      tags:
        - Lists
      description: Get all lists for the current logged in user.
      responses:
        201:
          description: Created
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
        403:
          description: Access Denied
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${GetAllFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

  /lists/{id}:
    get:
      summary: Get list
      tags:
        - Lists
      description: Get a single list for a user
      parameters:
        - name: id
          in: path
          description: id of the list to get
          required: true
          type: string
      responses:
        200:
          description: Found
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${GetFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

    put:
      summary: Update list
      tags:
        - Lists
      description: Update a single list for a user
      parameters:
        - name: id
          in: path
          description: id of the list to get
          required: true
          type: string
        - name: list
          in: body
          description: list to be updated
          schema:
            $ref: '#/definitions/List'
      responses:
        200:
          description: Found
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${UpdateListFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

    delete:
      summary: Deletes a list
      tags:
        - Lists
      description: Deletes a list.
      parameters:
        - name: id
          in: path
          description: id of the list
          required: true
          type: string
      responses:
        200:
          description: Found
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
        403:
          description: Access Denied
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${DeleteListFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

  /items:
    post:
      summary: Create a item
      tags:
        - Items
      description: Create a item for the current logged in user.
      parameters:
        - in: body
          name: item
          description: item to be created
          schema:
            $ref: '#/definitions/Item'
      responses:
        201:
          description: Created
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
        403:
          description: Access Denied
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${CreateItemFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

  /list/{listId}/items:
    get:
      summary: Get items for a list
      tags:
        - Items
      description: Get all items for a given list.
      parameters:
        - name: listId
          in: path
          description: id of the list to get items for
          required: true
          type: string
      responses:
        200:
          description: Found
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
        403:
          description: Access Denied
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${GetAllItemsFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

  /list/{listId}/items/{itemId}:
    delete:
      summary: Deletes an item from a list
      tags:
        - Items
      description: Deletes an item.
      parameters:
        - name: listId
          in: path
          description: id of the list the item belongs to
          required: true
          type: string
        - name: itemId
          in: path
          description: id of the item to delete
          required: true
          type: string
      responses:
        200:
          description: Found
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
        403:
          description: Access Denied
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${DeleteItemFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

  /vouchers:
    post:
      summary: Create a voucher
      tags:
        - Vouchers
      description: Create a voucher for the current logged in user.
      parameters:
        - in: body
          name: voucher
          description: voucher to be created
          schema:
            $ref: '#/definitions/Voucher'
      responses:
        201:
          description: Created
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
        403:
          description: Access Denied
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${CreateVoucherFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

    get:
      summary: Get vouchers
      tags:
        - Vouchers
      description: Get all vouchers for the current logged in user.
      responses:
        201:
          description: Created
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
        403:
          description: Access Denied
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${GetAllVouchersFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

  /vouchers/{id}:
    get:
      summary: Get voucher
      tags:
        - Vouchers
      description: Get a single voucher for a user
      parameters:
        - name: id
          in: path
          description: id of the voucher to get
          required: true
          type: string
      responses:
        200:
          description: Found
          headers:
            Access-Control-Allow-Headers:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Origin:
              type: 'string'
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${GetVoucherFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

definitions:
  $ref: ./definitions.yml
