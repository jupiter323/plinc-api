swagger: '2.0'

info:
  description: |
    Plinc API
  version: 1.0.0
  title:
    Fn::Sub: 'plinc-${Project}'

host: hn0gf6bpid.execute-api.us-east-1.amazonaws.com
basePath: /prod
schemes:
  - https

securityDefinitions:
  Authorizer:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: cognito_user_pools
    x-amazon-apigateway-authorizer:
      providerARNs:
      - Fn::Sub: "arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}"
      type: cognito_user_pools

x-amazon-apigateway-gateway-responses:
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
    responseTemplates:
      application/json: "{\"message\":$context.error.messageString}"
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
    responseTemplates:
      application/json: "{\"message\":$context.error.messageString}"

paths:
  /lists:
    post:
      summary: Create list
      parameters:
        - in: body
          name: list
          description: list to be created
          schema:
            $ref: '#/definitions/List'
      responses:
        201:
          description: Created
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
        403:
          description: Access Denied
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-request-validator:
        basic:
          validateRequestBody: true
          validateRequestParameters: false
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${CreateFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

  /lists/{owner}/{id}:
    get:
      summary: Represents a list
      description: >
        This resource represents an individual list in Plinc.
        Each lists is identified by a unique `id` and `owner`.
      parameters:
        - name: owner
          in: path
          description: owner of the list to get
          required: true
          type: string
        - name: id
          in: path
          description: id of the list to get
          required: true
          type: string
      responses:
        200:
          description: Found
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - Authorizer: []
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: 'POST'
        credentials:
          Fn::Sub: '${PlincApiRole.Arn}'
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/${GetFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          4\d{2}:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

definitions:
  List:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      category:
        type: string
      public:
        type: boolean
    required:
      - public
      - title
